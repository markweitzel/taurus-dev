name: Deploy to ADE Environment

permissions:
  id-token: write
  contents: read

on:
  workflow_dispatch:  
  #push:
  #  paths-ignore:
  #    - .github/**
  #    - .vscode/**
  #    - README.md
  #    - LICENSE
  #  branches: main
  # pull_request:
  #  types: [synchronize]

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      subscription: ${{ steps.ade.outputs.subscription }}
      resource-group: ${{ steps.ade.outputs.resource-group }}
      url: ${{ steps.website.outputs.url }}

    steps:
      - uses: actions/checkout@v3

      - name: Login to Azure (OIDC)
        uses: azure/login@v1
        with:
          client-id: ${{ vars.AZURE_CLIENT_ID }}
          tenant-id: ${{ vars.AZURE_TENANT_ID }}
          subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}

      - name: AZD Install
        run: curl -fsSL https://aka.ms/install-azd.sh | bash -s -- --version daily

      - name: AZD Login
        run: azd auth login --tenant-id ${{ vars.AZURE_TENANT_ID }} --client-id ${{ vars.AZURE_CLIENT_ID }} --federated-credential-provider github

      - name: AZD Config
        run: |
          azd config set platform.type devcenter
          azd env select contoso-shared-aks

      - name: AZD Deploy
        run: azd deploy

      - name: Get Website Url
        id: website
        run: ade_web_url=$( azd env get-values --output json | jq -r '.SERVICE_WEB_URL' ) && echo "url=$ade_web_url/" >> $GITHUB_OUTPUT

      - name: Summary
        run: |
          echo "### Deployment Successful :rocket:" >> $GITHUB_STEP_SUMMARY
          echo "- View the website: ${{ steps.website.outputs.url }}" >> $GITHUB_STEP_SUMMARY
          echo "- View resources in the [Azure Portal]($ADE_PORTAL_URL)" >> $GITHUB_STEP_SUMMARY
          echo '---' >> $GITHUB_STEP_SUMMARY
          echo "### Use the [azd cli](https://learn.microsoft.com/en-us/azure/developer/azure-developer-cli/) to deploy the application" >> $GITHUB_STEP_SUMMARY
          echo "1. First, make sure azd is configured azd to use DevCenter:" >> $GITHUB_STEP_SUMMARY
          echo '```sh' >> $GITHUB_STEP_SUMMARY
          echo "azd config set platform.type devcenter" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo '2. In the root of the cloned repsitory, select the `${{ needs.setup.outputs.name }}` environment created for this ${{ github.event_name == 'pull_request' && 'PR' || 'branch' }}:' >> $GITHUB_STEP_SUMMARY
          echo '```sh' >> $GITHUB_STEP_SUMMARY
          echo "azd env select $ADE_NAME" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "3. When you make changes, deploy them to the new environment:" >> $GITHUB_STEP_SUMMARY
          echo '```sh' >> $GITHUB_STEP_SUMMARY
          echo "azd deploy" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
